Vagrant.configure("2") do |config|
# config.vm.provision "shell", inline: "yum install -y epel-release telnet wget curl tree ntp vim net-tools && yum update -y && systemctl enable ntpd && sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config && systemctl restart sshd"
config.vm.provision "shell", inline: "yum install -y epel-release git telnet wget curl tree ntp vim net-tools && yum update -y && systemctl enable ntpd && sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config && systemctl restart sshd"
  config.vm.define "kubeM" do |kubeM|
    kubeM.vm.box = "centos/7"
    # kubeM.vm.box = "bento/ubuntu-18.04"
    kubeM.vm.hostname = 'kubeM'
    kubeM.vm.network :private_network, bridge: "en0: Wi-Fi (AirPort)", ip: "192.168.10.50"
    kubeM.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 2048]
      v.customize ["modifyvm", :id, "--cpus", 2]
      v.customize ["modifyvm", :id, "--name", "kubeM"]
  end
end


  config.vm.define "kube1" do |kube1|
    kube1.vm.box = "centos/7"
    kube1.vm.hostname = 'kube1'
    kube1.vm.network :private_network, bridge: "en0: Wi-Fi (AirPort)", ip: "192.168.10.51"
    kube1.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 4096]
      v.customize ["modifyvm", :id, "--cpus", 2]
      v.customize ["modifyvm", :id, "--name", "kube1"]
    end
  end

  config.vm.define "kube2" do |kube2|
    kube2.vm.box = "centos/7"
    kube2.vm.hostname = 'kube2'
    kube2.vm.network :private_network, bridge: "en0: Wi-Fi (AirPort)", ip: "192.168.10.52"
    kube2.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 4096]
      v.customize ["modifyvm", :id, "--cpus", 2]
      v.customize ["modifyvm", :id, "--name", "kube2"]
    end

end
end